(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[18],{"622a":function(t,n,e){"use strict";e.r(n);var a=e("802f"),c=e("18d6"),i=e("44eb"),o=e("9baa"),u=e("ea9b"),s=function(t,n,e,a){function c(t){return t instanceof e?t:new e((function(n){n(t)}))}return new(e||(e=Promise))((function(e,i){function o(t){try{s(a.next(t))}catch(n){i(n)}}function u(t){try{s(a["throw"](t))}catch(n){i(n)}}function s(t){t.done?e(t.value):c(t.value).then(o,u)}s((a=a.apply(t,n||[])).next())}))};const d=window.BackgroundFetch;d.configure({minimumFetchInterval:15,requiredNetworkType:1},(t=>s(void 0,void 0,void 0,(function*(){if(Object(o["a"])()){const t=yield i["b"].get("/user");if(t.data.result){const n=t.data.user,e=c["a"].getItem("lastIsVaccinated"),a=c["a"].getItem("lastIsVaccineReady");if(null!==e||null!==a){const t=!!n.isVaccinated,c=n.isVaccineReady;t!==e&&cordova.plugins.notification.local.schedule({title:"An update!",text:"Your vaccination status was updated!",foreground:!0}),c!==a&&cordova.plugins.notification.local.schedule({title:"An update!",text:"Your vaccine status was updated!",foreground:!0})}}}yield Object(u["b"])(),yield Object(a["a"])(),d.finish(t)}))),(t=>{d.finish(t)})).then((t=>{console.log(`background fetch status: ${t}`)}))}}]);